package functions

import (
	"context"
	"log"

	"cloud.google.com/go/firestore"
	firebase "firebase.google.com/go"

	"github.com/Jblew/cairparavel/functions/app"
	"github.com/Jblew/cairparavel/functions/app/lib/messenger"
	golobbyContainer "github.com/golobby/container"
	golobbyContainerPkg "github.com/golobby/container/pkg/container"
)

var container golobbyContainerPkg.Container = golobbyContainer.NewContainer()

func init() {
	appConfig := GetAutogeneratedConfig()
	container.Singleton(func() app.Config {
		return appConfig
	})

	container.Singleton(func() messenger.Config {
		return appConfig.Messenger
	})

	firebaseApp, err := firebase.NewApp(context.Background(), &firebase.Config{})
	if err != nil {
		log.Fatalf("firebase.NewApp: %v", err)
		return
	}

	container.Singleton(func() *firebase.App {
		return firebaseApp
	})

	firestoreClient, err := firebaseApp.Firestore(context.Background())
	if err != nil {
		log.Fatalf("app.Firestore: %v", err)
		return
	}

	container.Singleton(func() *firestore.Client {
		return firestoreClient
	})

	app.Bind(container)
}
